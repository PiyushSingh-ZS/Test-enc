name: Build and Push Base Images

on:
  push:
    branches: [ development ]


env:
  REGISTRY: ghcr.io
  IMAGE_NAME: piyushsingh-zs/test-enc

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:

  changed-files:

    runs-on: ubuntu-latest
    container:
      image: ghcr.io/piyushsingh-zs/test-enc:go-b5c466121b96ff7e2bff80338d06bdd14473c50c
      options: --rm
      env:
        GOBIN: /go/bin
        PATH: /go/bin:$PATH
    steps:
      - name: Check out Code
        uses: actions/checkout@v3



      - name: Get dependencies
        run: |
          go mod download

      - name: Test
        run: |
          mkdir -p temp
          go test ./... -count=1 -v -coverprofile temp/cover.out -coverpkg=./...
          cat temp/cover.out | grep -v "mock_interface" | grep -v "migrations" > temp/coverage.out

      - name: Coverage report
        run: |
          go tool cover -func=temp/coverage.out | tee temp/c.out

      - name: Generate and Commit Coverage Badge
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main'}}
        run: |
          go install github.com/AlexBeauchemin/gobadge@latest
          gobadge -filename=temp/c.out -target=$(pwd)/README.md
          git config --local user.email "action@github.com" && git config --local user.name "GitHub-Action"
          git diff --quiet --exit-code README.md || git commit README.md -m "updating coverage in README.md"

      - name: Push Coverage Badge
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main'}}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ github.token }}
          branch: ${{github.ref}}

      - name: Coverage Quality Gate
        run: |
          echo "Quality Gate: checking test coverage is above threshold ..."
          echo "Threshold             : $TEST_COVERAGE_THRESHOLD %"
          totalCoverage=`go tool cover -func=temp/coverage.out | grep 'total:' | grep -Eo '[0-9]+\.[0-9]+'`
          echo "Current test coverage : $totalCoverage %"
          if (( $(echo "$totalCoverage $TEST_COVERAGE_THRESHOLD" | awk '{print ($1 >= $2)}') )); then
              echo "OK"
          else
              echo "Current test coverage is below threshold. Please add more unit tests or adjust threshold to a lower value."
              echo "Failed"
              exit 1
          fi

  code_quality:
    name: ðŸŽ– Code Quality
    container:
      image: ghcr.io/piyushsingh-zs/test-enc:go-b5c466121b96ff7e2bff80338d06bdd14473c50c
      options: --rm
      env:
        GOBIN: /go/bin
        PATH: /go/bin:$PATH

    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3


      - name: Setup Git
        run: |
          go mod download

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.54.1
          args: --timeout 10m


