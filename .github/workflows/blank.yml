# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
            app_name: sample-api
            GOPRIVATE: developer.zopsmart.com/go/gofr
            project_name: platform-379911
            cluster_name: headless-services-dev
            DB_NAME: ""
            DB_DIALECT: ""
            DB_USER: ""
            TRACER_URL: "https://tempo.observability-dev.gcpgap.zopsmart.com"
            TRACER_EXPORTER: "zipkin"
            minMemory: "512Mi"
            maxMemory: "1Gi"
            maxCPU: "1.5"
      
        
            
jobs:
  loop:

    runs-on: ubuntu-latest
 
    outputs:
      image: ${{ steps.output-image.outputs.image }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.

      - id: files
        uses: jitterbit/get-changed-files@v1
      - run: |
          for added_modified_file in ${{ steps.files.outputs.all }}; do
            echo ${added_modified_file}
          done
          
      - id: sort
        run: | 
          readarray -td $'\0' sorted < <(
                    printf "%s\n" "${{ steps.files.outputs.all }}" | sort -t/ -k2
                    )

          printf '%s\n' "${sorted[@]}"
          echo "files=`echo ${sorted}`" >> "$GITHUB_OUTPUT"
      - id : reverse
        run: echo ${{steps.sort.outputs.files}}
      - name: loop over 
        run: |
          cd 
          for added_modified_file in ${{ steps.sort.outputs.files }}; do
            echo ${added_modified_file}
          done
